{"version":3,"sources":["webpack:///webpack/bootstrap df326ba304af569ac1f3","webpack:///external \"lodash\"","webpack:///./src/Data.js","webpack:///./src/DataValue.js","webpack:///./src/DataArray.js","webpack:///./src/DataMap.js","webpack:///./src/DataObject.js","webpack:///./src/Transaction.js","webpack:///./src/MapTo.js","webpack:///./src/FilterTo.js","webpack:///./src/Modifier.js","webpack:///./src/ReduceTo.js","webpack:///./src/types.js","webpack:///./src/Key.js","webpack:///./src/bottle.js","webpack:///./src/index.js","webpack:///external \"bottlejs\"","webpack:///external \"text-table\"","webpack:///external \"eventemitter3\""],"names":["KNOWN_TYPES","split","bottle","factory","c","Data","constructor","content","name","_nextID","_currentTransaction","transStart","close","Transaction","_activeTrans","state","hasTrans","transEnd","transRevert","map","fn","keys","key","get","mapTo","args","MapTo","inputs","_inputs","Set","outputs","_outputs","Key","filterTo","FilterTo","reduceTo","ReduceTo","entries","Array","from","cloneData","value","cloneDeep","equal","isEqual","_content","vType","dataType","type","Error","toString","newData","replace","sendReplace","onChange","raw","valueType","remove","values","has","index","set","oldValue","newContent","newValue","typeName","str","exec","change","_sendChange","addChange","emit","data","includes","_mainTable","isHorizontal","maxItems","cellRenderer","alignValue","slice","console","log","align","push","forEach","rows","zip","isArray","concat","textTable","hsep","_outTable","outData","otherWiths","item","names","withData","main","difference","join","modifierType","target","toTable","config","mainTable","err","message","outTable","size","count","out","DATATYPE_MAP","DataMap","DATATYPE_OBJECT","DataObject","DATATYPE_ARRAY","DataArray","DATATYPE_VALUE","DataValue","splice","removedCount","added","addedCount","length","removed","pop","result","last","unshift","array","shift","first","onSplice","i","Math","round","myEntries","Map","delete","valueKeys","Object","deletedKeys","assign","reduce","pair","hasOwnProperty","constant","changes","_replace","revert","oldValues","newValues","Modifier","onRemove","fAdded","callback","_withObj","execute","_emitToData","on","onSet","_inited","newTarget","getEmptyTo","withObj","init","b","_withSet","_callback","withs","withList","compact","flattenDeep","_addWith","memo","_watch","typeof","add","into","toNew","initialize","toData","blankOf","toNewArray","toNewMap","toNewObject","with","_target","_from","typeofTarget","typeofType","filter","targetType","Symbol","identifyMe","DATATYPES","KeyTo","targetKey","newKey","dataValue","dataArray","dataMap","dataObject","transaction","modifier","types","myBottle","container"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap df326ba304af569ac1f3","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 0\n// module chunks = 0","/* eslint-disable no-restricted-syntax,no-useless-escape */\nimport { difference, cloneDeep, includes, first, last, zip, isEqual } from 'lodash';\nimport textTable from 'text-table';\nimport EventEmitter from 'eventemitter3';\n\nconst KNOWN_TYPES = 'add,remove,delete,replace,change,update'.split(',');\n\nexport default (bottle) => {\n  /**\n   * the base class for Data variations\n   */\n\n  bottle.factory('Data', (c) => {\n    class Data extends EventEmitter {\n      constructor(content, name) {\n        super();\n        this.content = content;\n        this.name = name || `data_${++Data._nextID}`;\n        this._currentTransaction = null;\n      }\n\n      transStart() {\n        if (this._currentTransaction) {\n          this._currentTransaction.close();\n        }\n        this._currentTransaction = new c.Transaction(this);\n      }\n\n      get _activeTrans() {\n        if (this._currentTransaction && this._currentTransaction.state === 'open') { return this._currentTransaction; }\n        return false;\n      }\n\n      get hasTrans() {\n        return !!this._activeTrans;\n      }\n\n      transEnd() {\n        if (this._currentTransaction) {\n          this._currentTransaction.close();\n          this._currentTransaction = null;\n        }\n      }\n\n      transRevert() {\n        this._currentTransaction = null;\n      }\n\n      map(fn) {\n        return this.keys.map(key => fn(this.get(key), key));\n      }\n\n      mapTo(...args) {\n        return new c.MapTo(this, ...args);\n      }\n\n      get inputs() {\n        if (!this._inputs) { this._inputs = new Set(); }\n        return this._inputs;\n      }\n\n      get outputs() {\n        if (!this._outputs) { this._outputs = new Set(); }\n        return this._outputs;\n      }\n\n      key(...args) {\n        return new c.Key(this, ...args);\n      }\n\n      filterTo(...args) {\n        return new c.FilterTo(this, ...args);\n      }\n\n      reduceTo(...args) {\n        return new c.ReduceTo(this, ...args);\n      }\n\n      get entries() {\n        return Array.from(this.content.entries());\n      }\n\n      cloneData(value) {\n        return cloneDeep(value);\n      }\n\n      equal(value) {\n        return isEqual(value, this.content);\n      }\n\n      set content(value) {\n        if (this._content) {\n          const vType = c.dataType(value);\n          if (vType !== this.type) throw new Error(`cannot replace  ${this.type.toString()} with type ${vType.toString()}`);\n          if (this.equal(value)) { return; }\n        }\n\n        value = this.cloneData(value);\n\n        if (this._activeTrans) {\n          this._activeTrans.newData = value;\n          this._activeTrans.replace = true;\n          return;\n        }\n\n        this._content = value;\n        this.sendReplace();\n      }\n\n      sendReplace() {\n        this.onChange({ type: 'replace', content: this.content });\n      }\n\n      raw() {\n        return cloneDeep(this.content);\n      }\n\n      get content() {\n        return this._content;\n      }\n\n      replace(value) {\n        const valueType = c.dataType(value);\n        if (this.type !== valueType) {\n          throw new Error(`attempt to replace in ${this.name} a ${this.type.toString()} with content of type ${valueType.toString()}`);\n        }\n        this.content = value;\n      }\n\n      remove(key) {\n        throw new Error('override');\n      }\n\n      get values() {\n        throw new Error('override');\n      }\n\n      get keys() {\n        throw new Error('override');\n      }\n\n      has(index) {\n        throw new Error('override');\n      }\n\n      get(index) {\n        return this.content[index];\n      }\n\n      set(name, value) {\n        if (this.has(name)) {\n          const oldValue = this.get(name);\n          if (isEqual(value, oldValue)) return;\n\n          if (this._activeTrans) {\n            this._activeTrans.newContent[name] = value;\n          } else { this.content[name] = value; }\n          this.onChange({\n            type: 'update', name, index: name, oldValue, newValue: value,\n          });\n        } else {\n          if (this._activeTrans) {\n            this._activeTrans.newContent[name] = value;\n          } else { this.content[name] = value; }\n          this.onChange({\n            type: 'add', name, index: name, newValue: value,\n          });\n        }\n      }\n\n      get type() {\n        throw new Error('must override');\n      }\n\n      get typeName() {\n        const str = this.type.toString();\n        return (/\\(([^[)(]*)\\)/.exec(str)[1]);\n      }\n\n      onChange(change) {\n        this._sendChange(change);\n      }\n\n      _sendChange(change) {\n        if (this._activeTrans) {\n          this._activeTrans.addChange(change);\n          return;\n        }\n\n        change = cloneDeep(change);\n\n        this.emit('change', { data: this.name, change });\n\n        this.emit(change.type, { data: this.name, change });\n\n        // eslint-disable-next-line default-case\n        switch (change.type) {\n          case 'delete':\n            this.emit('remove', { data: this.name, change });\n            break;\n\n          case 'remove':\n            this.emit('delete', { data: this.name, change });\n            break;\n        }\n\n        if (!includes(KNOWN_TYPES, change.type)) {\n          this.emit('change-other', { data: this.name, change });\n        }\n      }\n\n      _mainTable({\n        isHorizontal = true, maxItems = null, cellRenderer = null, alignValue = 'l',\n      }) {\n        const data = [];\n        // eslint-disable-next-line prefer-destructuring\n        let keys = this.keys;\n        if (maxItems) keys = keys.slice(0, maxItems);\n        // eslint-disable-next-line prefer-destructuring\n        let values = this.values;\n        if (!values) {\n          console.log('cant get values for ', this.name);\n          values = [];\n        }\n        if (cellRenderer) values = this.map(cellRenderer);\n        if (maxItems) values = values.slice(0, maxItems);\n        let align = ['l'];\n        if (isHorizontal) {\n          data.push(['key', ...keys]);\n          data.push(['value', ...values]);\n          if (typeof alignValue === 'function') {\n            align = this.map(alignValue);\n            data.push(['l', ...align]);\n          } else {\n            values.forEach(() => align.push(alignValue));\n          }\n        } else {\n          data.push(['key', 'value']);\n          const rows = zip(keys, values);\n          data.push(...rows);\n          if (Array.isArray(alignValue)) {\n            align = align.concat(alignValue);\n          } else align.push(alignValue, alignValue);\n        }\n\n        return textTable(data, { align, hsep: '|' });\n      }\n\n      _outTable() {\n        const outData = [['method', 'target', 'from', 'with']];\n        const otherWiths = (item) => {\n          const names = item.withData.map(data => (data ? data.name : ''));\n          const main = [item.from.name];\n          return difference(names, main).join(', ');\n        };\n        for (const item of this.outputs) {\n          outData.push([\n            item.modifierType,\n            item.target ? item.target.name : '(none)',\n            item.from.name,\n            otherWiths(item),\n          ]);\n        }\n\n        return textTable(outData, { align: ['l', 'l'] });\n      }\n\n      toTable(config = {}) {\n        let mainTable = '--- error ---';\n\n        try {\n          mainTable = this._mainTable(config);\n        } catch (err) {\n          mainTable = `Error on mainTable: ${err.message}`;\n          console.log('mainTable Error:', err);\n        }\n\n        let outTable = '(no outputs)';\n        if (this.outputs.size > 0) {\n          try {\n            outTable = this._outTable(config);\n          } catch (err) {\n            outTable = `Error on outTable: ${err.message}`;\n            console.log('outTable Error:', err);\n          }\n        }\n\n        let count = `(${this.size})`;\n        if (config.maxItems < this.size) {\n          count = `(${config.maxItems} of ${this.size})`;\n        }\n\n        return `\n____________________________________________\nDATA: ${this.name}:${this.typeName} ${count}\n${mainTable}\n\noutputs:\n        \n${outTable}\n-------------------------------------------`;\n      }\n    }\n    Data._nextID = 0;\n\n    return Data;\n  });\n\n  bottle.factory('toData', c => (content, name = null) => {\n    const type = c.dataType(content);\n    let out;\n    switch (type) {\n      case c.DATATYPE_MAP:\n        out = new c.DataMap(content, name);\n        break;\n\n      case c.DATATYPE_OBJECT:\n        out = new c.DataObject(content, name);\n        break;\n\n      case c.DATATYPE_ARRAY:\n        out = new c.DataArray(content, name);\n        break;\n\n      case c.DATATYPE_VALUE:\n        out = new c.DataValue(content, name);\n        break;\n\n      default:\n        throw new Error(`unhandled type, ${type}`);\n    }\n    return out;\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Data.js","import { cloneDeep, isEqual } from 'lodash';\n\nexport default (bottle) => {\n  bottle.factory('DataValue', c => class DataMap extends c.Data {\n    set(index, value) {\n      throw new Error('cannot set a DataValue');\n    }\n    get type() {\n      return c.DATATYPE_VALUE;\n    }\n\n    set content(newValue) {\n      const oldValue = this._content || null;\n      if (isEqual(this._content, newValue)) return;\n      this._content = newValue;\n      this.onChange({\n        type: 'replace',\n        oldValue,\n        newValue,\n      });\n    }\n\n    cloneData(item) {\n      return item;\n    }\n\n    get size() {\n      return 1;\n    }\n\n    get content() {\n      return this._content;\n    }\n\n    replace(value) {\n      this.content = value;\n    }\n\n    _mainTable() {\n      return `value: ${this.content}`;\n    }\n\n    raw() {\n      if (this.content && typeof this.content === 'object') return cloneDeep(this.content);\n      return this.content;\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/DataValue.js","import { cloneDeep, first, last, isEqual } from 'lodash';\n\nexport default (bottle) => {\n  bottle.factory('DataArray', c => class DataMap extends c.Data {\n    get type() {\n      return c.DATATYPE_ARRAY;\n    }\n\n    splice(index, removedCount, ...added) {\n      const addedCount = added.length;\n\n      const removed = this.content.splice(index, removedCount, ...added);\n      this.onChange({\n        type: 'splice', index, added, removed, addedCount, removedCount,\n      });\n      return removed;\n    }\n    slice(...args) { return this.content.slice(...args); }\n    push(...added) {\n      this.splice(this.content.length, 0, ...added);\n    }\n    pop() {\n      if (!this.length) return null;\n      const result = last(this.content);\n      this.splice(this.length - 1, 1);\n      return result;\n    }\n    unshift(...added) {\n      return this.splice(0, 0, ...added);\n    }\n    get length() {\n      return this.content.length;\n    }\n\n    get size() {\n      return this.length;\n    }\n\n    cloneData(array) {\n      return array.slice(0);\n    }\n\n    equal(value) {\n      if (value.length !== this.length) return false;\n      return super.equal(value);\n    }\n\n    shift() {\n      if (!this.length) return null;\n      const out = first(this.content);\n      this.splice(0, 1);\n      return out;\n    }\n\n    remove(key) {\n      return this.splice(key, 1);\n    }\n\n    onChange(change) {\n      switch (change.type) {\n        case 'splice':\n          this.emit('change', { data: this.name, change });\n          this.onSplice(change);\n          break;\n\n        default:\n          super.onChange(change);\n      }\n    }\n\n    map(fn) {\n      return this.content.map(fn);\n    }\n\n    set(index, value) {\n      for (let i = this.length; i < index; ++i) {\n        super.set(i);\n      }\n      super.set(index, value);\n    }\n\n    onSplice(change) {\n      this.emit('splice', { data: this.name, change });\n    }\n    get keys() {\n      return Array.from(this.content.keys());\n    }\n\n    get values() {\n      return this.content.slice(0);\n    }\n\n    has(index) {\n      return index === Math.round(index) && index >= 0 && index < this.content.length;\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/DataArray.js","import { cloneDeep, isEqual } from 'lodash';\n\nexport default (bottle) => {\n  bottle.factory('DataMap', c => class DataMap extends c.Data {\n    get type() {\n      return c.DATATYPE_MAP;\n    }\n\n    raw() {\n      const myEntries = this.entries.map(([key, value]) => [key, cloneDeep(value)]);\n      return new Map(myEntries);\n    }\n\n    get(name) {\n      if (this._activeTrans) {\n        return this._activeTrans.newContent.get(name);\n      }\n      return this.content.get(name);\n    }\n\n    get size() {\n      return this.content.size;\n    }\n\n    get keys() {\n      return Array.from(this.content.keys());\n    }\n\n    get values() {\n      return Array.from(this.content.values());\n    }\n\n    cloneData(map) {\n      return new Map(map);\n    }\n\n    equal(value) {\n      if (this.size !== value.size) return false;\n      return super.equal(value);\n    }\n\n    set(name, value) {\n      if (typeof name === 'undefined') throw new Error('cannot set undefined', name);\n      if (this.has(name)) {\n        const oldValue = this.get(name);\n        if (isEqual(value, oldValue)) {\n          return;\n        }\n        if (this._activeTrans) {\n          this._activeTrans.newContent.set(name, value);\n        } else { this.content.set(name, value); }\n        this.onChange({\n          type: 'update',\n          name,\n          oldValue,\n          newValue: value,\n        });\n      } else {\n        if (this._activeTrans) {\n          this._activeTrans.newContent.set(name, value);\n        } else { this.content.set(name, value); }\n        this.onChange({\n          type: 'add',\n          name,\n          newValue: value,\n        });\n      }\n    }\n\n    has(index) {\n      return this.content.has(index);\n    }\n\n    remove(key) {\n      if (!this.has(key)) return;\n      const oldValue = this.get(key);\n      this.content.delete(key);\n      this.onChange({ type: 'remove', name: key, oldValue });\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/DataMap.js","import { cloneDeep, difference } from 'lodash';\n\nexport default (bottle) => {\n  bottle.factory('DataObject', c => class DataObject extends c.Data {\n    get type() {\n      return c.DATATYPE_OBJECT;\n    }\n\n    replace(value) {\n      const valueKeys = Object.keys(value);\n      const deletedKeys = difference(this.keys, valueKeys);\n      deletedKeys.forEach(key => this.remove(key));\n      valueKeys.forEach(key => this.set(key, value[key]));\n    }\n    get size() {\n      return this.values.length;\n    }\n\n    cloneData(data) {\n      return Object.assign({}, data);\n    }\n\n    raw() {\n      return this.entries.reduce((out, pair) => {\n        out[pair[0]] = (pair && (typeof pair[1] === 'object')) ? cloneDeep(pair[1]) : pair[1];\n        return out;\n      }, {});\n    }\n    get keys() {\n      return Array.from(Object.keys(this.content));\n    }\n\n    get values() {\n      return Array.from(Object.values(this.content));\n    }\n\n    get entries() {\n      return Object.entries(this.content);\n    }\n\n    remove(key) {\n      if (!this.has(key)) return;\n      const oldValue = this.content[key];\n      delete this.content[key];\n      this.onChange({ type: 'remove', name: key, oldValue });\n    }\n\n    has(index) {\n      // eslint-disable-next-line no-prototype-builtins\n      return this.content.hasOwnProperty(index);\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/DataObject.js","export default(bottle) => {\n  bottle.constant('Transaction', class Transaction {\n    constructor(data) {\n      this.data = data;\n      this.changes = [];\n      this._replace = false;\n      this.newContent = this.data.raw();\n      this.state = 'open';\n    }\n\n    get replace() {\n      return this._replace;\n    }\n\n    set replace(value) {\n      this._replace = !!value;\n    }\n\n    revert() {\n      this.state = 'reverted';\n    }\n\n    close() {\n      if (this.state !== 'open') return;\n      if (this.replace) {\n        this.state = 'closed';\n        this.data.sendReplace();\n      } else {\n        const oldValues = this.changes.reduce((values, change) => {\n          // eslint-disable-next-line default-case\n          switch (change.type) {\n            case 'set':\n              values.set(change.name, this.data.get(change.name));\n          }\n          return values;\n        }, new Map());\n\n        const newValues = this.changes.reduce((values, change) => {\n          // eslint-disable-next-line default-case\n          switch (change.type) {\n            case 'add':\n              values.set(change.name, change.value);\n              break;\n\n            case 'set':\n              values.set(change.name, change.value);\n              oldValues.set(change.name, this.data.get(change.name));\n          }\n\n          return values;\n        }, new Map());\n        this.data._content = this.newContent;\n        this.state = 'closed';\n        this.data.onChange({\n          type: 'batch',\n          oldValues,\n          newValues,\n        });\n      }\n    }\n\n    addChange(change) {\n      if (this.replace) return;\n\n      switch (change.type) {\n        case 'splice':\n          this.replace = true;\n          break;\n\n        case 'delete':\n          this.replace = true;\n          break;\n\n        case 'replace':\n          this.replace = true;\n          break;\n\n        default:\n          this.changes.push(change);\n      }\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Transaction.js","\n\nexport default(bottle) => {\n  /**\n   * MapTo establishes a relationship between two data objects\n   * that copies filtered values from source to destination keys.\n   */\n  bottle.factory('MapTo', c => class MapTo extends c.Modifier {\n    constructor(data, ...args) {\n      if (data.type === c.DATATYPE_VALUE) throw new Error('cannot MapTo values');\n      super(data, ...args);\n    }\n\n    get modifierType() { return 'MapTo'; }\n\n    onRemove({ change: { index, name } }) {\n      if (!this.target) return;\n      if (this.from.type === c.DATATYPE_ARRAY) {\n        this.target.remove(index);\n      } else this.target.remove(name);\n    }\n\n    onSplice({ change }) {\n      if (!this.target) return;\n      const { index, removedCount, added } = change;\n      if (this.target.type === c.DATATYPE_ARRAY) {\n        // should only get this messages on array to array actions\n        const fAdded = [];\n        added.forEach((value, key) => {\n          fAdded.push(this.callback(value, key + index, this._withObj));\n        });\n        this.target.splice(index, removedCount, ...fAdded);\n      } else {\n        // there is no simple way to reconcile map splices to non-arrays;\n        this.execute();\n      }\n    }\n\n    _emitToData(data) {\n      if (data.name === this.from.name) {\n        data.on('remove', this.onRemove, this);\n        data.on('splice', this.onSplice, this);\n        data.on('replace', this.map, this);\n        data.on('add', this.onSet, this);\n        data.on('update', this.onSet, this);\n      } else {\n        super._emitToData(data);\n      }\n    }\n\n    onSet({ target, change }) {\n      const { index, name, newValue } = change;\n      if (!this.target) return;\n      const key = this.from.type === c.DATATYPE_ARRAY ? index : name;\n      try {\n        const value = this.callback(newValue, key);\n        this.target.set(key, value);\n      } catch (err) {\n        console.log('failed on change: ', target, change);\n      }\n    }\n\n    onChange() {\n      if (!this._inited) return;\n      this.map();\n    }\n\n    /**\n     * map all thje values\n     */\n    map() {\n      if (!this.target) return;\n      let newTarget = this.getEmptyTo();\n      const withObj = this._withObj;\n      switch (this.target.type) {\n        case c.DATATYPE_ARRAY:\n          newTarget = this.from.values.map((value, key) => {\n            const result = this.callback(value, key, withObj);\n            return result;\n          });\n          break;\n\n        case c.DATATYPE_OBJECT:\n          this.from.entries.forEach(([key, value]) => {\n            newTarget[key] = this.callback(value, key, withObj);\n          });\n          break;\n\n        case c.DATATYPE_MAP:\n          this.from.entries.forEach(([key, value]) => {\n            const newValue = this.callback(value, key, withObj);\n            return newTarget.set(key, newValue);\n          });\n          break;\n\n        default:\n          throw new Error('unhandled type');\n      }\n\n      this.target.content = newTarget;\n    }\n\n    getEmptyTo() {\n      let out;\n      switch (this.target.type) {\n        case c.DATATYPE_ARRAY:\n          out = [];\n          break;\n\n        case c.DATATYPE_OBJECT:\n          out = {};\n          break;\n\n        case c.DATATYPE_MAP:\n          out = new Map();\n          break;\n\n        case c.DATATYPE_VALUE:\n          out = null;\n          break;\n\n        default:\n          throw new Error('unhandled type');\n      }\n      return out;\n    }\n\n    init() {\n      this.map();\n    }\n\n    execute() {\n      this.map();\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/MapTo.js","import { includes } from 'lodash';\n\n/**\n * Callbacks are \"Holistic\" observers. Its central lever is a function that is called whenever\n * a Data instance changes.\n *\n * There is a primary Data that the callback checks, but it can be a funnel for multiple\n * Data objects, updating every time any one of them change.\n *\n * Callbacks work in one of two ways.\n *\n *  1) if there is NO \"target\" designated, its just a \"change callback\",\n *    triggered every time the Data (or a data in withData) changes;\n *    this is a good way to bridge information out of one Data object,\n *    or do other unions of several Data collections.\n *\n *  2) if there is a \"target\" and it is a Data, the result of the callback replaces\n *     the entire \"target\"'s contents.\n *\n *  3) if there is a \"target\" and it is a function, that function is called with the result\n *     of the callback  every time one of the watched Data changes. This is a good way to,\n *     for instance, replace a field of a Data collection with the result of an operation.\n *\n * @param b\n */\nexport default(b) => {\n  b.factory('FilterTo', c => class FilterTo extends c.Modifier {\n    get modifierType() { return 'FilterTo'; }\n\n    /**\n     * triggered whenever the \"from\" data or any of the \"withs\" changes.\n     * it passes:\n     * 1) the content of the from data\n     * 2) the change (may be to from or any of the \"with\" data)\n     * 3) an object of any data added to using the \"with\" method\n     *\n     * if there is a target, the result is\n     * @param change\n     */\n    onChange(change) {\n      if (!this._inited) return;\n      const result = this.callback(this.from.content, this._withObj, change);\n      if (this.target) {\n        if (this.target instanceof c.Data) {\n          this.target.replace(result);\n        } else if (typeof this.target === 'function') {\n          this.target(result, change, this);\n        } else {\n          throw new Error('strange target!');\n        }\n      }\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/FilterTo.js","import { includes, flattenDeep, compact } from 'lodash';\n\n/**\n * Callbacks are \"Holistic\" observers. Its central lever is a function that is called whenever\n * a Data instance changes.\n *\n * There is a primary Data that the callback checks, but it can be a funnel for multiple\n * Data objects, updating every time any one of them change.\n *\n * Callbacks work in one of two ways.\n *\n *  1) if there is NO \"target\" designated, its just a \"change callback\",\n *    triggered every time the Data (or a data in withData) changes;\n *    this is a good way to bridge information out of one Data object,\n *    or do other unions of several Data collections.\n *\n *  2) if there is a \"target\" and it is a Data, the result of the callback replaces\n *     the entire \"target\"'s contents.\n *\n *  3) if there is a \"target\" and it is a function, that function is called with the result\n *     of the callback  every time one of the watched Data changes. This is a good way to,\n *     for instance, replace a field of a Data collection with the result of an operation.\n *\n * note - the result of reduction is an instance of the same type as the target\n * @param b\n *\n */\n\nexport default(b) => {\n  b.factory('Modifier', c => class ReduceTo {\n    constructor(from, callback, target, ...withData) {\n      this._withSet = new Set();\n      this.target = target;\n      this.from = from;\n      this.callback = callback;\n      this.withData = withData;\n      this._inited = false;\n    }\n\n    get withData() {\n      return Array.from(this._withSet.values());\n    }\n\n    get callback() {\n      return this._callback;\n    }\n\n    set callback(value) {\n      if (!value && typeof value === 'function') { throw new Error('callback must be a function'); }\n      this._callback = value;\n    }\n\n    /**\n     * note -- this is an additive method; it won't clear out old withs\n     * just adds new ones.\n     * @param withs\n     */\n    set withData(withs) {\n      if (withs) {\n        let withList;\n        if (Array.isArray(withs)) {\n          withList = withs;\n        } else if (withs instanceof c.Data) {\n          withList = [withs];\n        } else {\n          throw new Error('withs must be a Data instance or an array of them.');\n        }\n        compact(flattenDeep(withList)).forEach(data => this._addWith(data));\n      }\n    }\n\n    get _withObj() {\n      return Array.from(this._withSet.values()).reduce((memo, data) => {\n        memo[data.name] = data.content;\n        return memo;\n      }, {});\n    }\n\n    _addWith(data) {\n      if (!data && data instanceof c.Data) {\n        throw new Error('withs must be a Data instance.');\n      }\n      if (this._withSet.has(data)) return;\n      this._watch(data);\n    }\n\n    /**\n     * watch links change in the parameter to trigger onChange.\n     *\n     * Both the primary (from) data collection and any \"withs\"\n     * pass through `._watch`.\n     *\n     * @param data {c.Data}\n     * @private\n     */\n    _watch(data) {\n      if (!c.typeof(data) === 'Data') {\n        throw new Error('watch targets must be a Data instance.');\n      }\n\n      if (this._withSet.has(data)) return;\n      this._withSet.add(data);\n\n      this._emitToData(data);\n      data.outputs.add(this);\n    }\n\n    _emitToData(data) {\n      if (!(c.typeof(data) === 'Data')) {\n        console.log('bad watch: ', data);\n        throw new Error('watch targets must be a Data instance.');\n      }\n      try {\n        data.on('change', this.onChange, this);\n      } catch (err) {\n        console.log('bad watch: ', data, err);\n      }\n    }\n\n    /**\n     * the action that gets triggered on a change of from or a with Data.\n     * note that when you manually initialize the modifier, there will be no change.\n     * @param change\n     */\n    onChange(change) {\n      throw new Error('must override');\n    }\n\n    init() {\n      this._inited = true;\n      if (this.target) this.onChange(null);\n    }\n\n    into(target, init = false) {\n      this.target = target;\n      if (init) this.init();\n      return this;\n    }\n\n    toNew(type, name, initialize = false) {\n      this.target = c.toData(c.blankOf(type), name);\n      if (initialize) this.init();\n      return this;\n    }\n\n    toNewArray(name, initialize = false) {\n      return this.toNew(c.DATATYPE_ARRAY, name, initialize);\n    }\n\n    toNewMap(name, initialize = false) {\n      return this.toNew(c.DATATYPE_MAP, name, initialize);\n    }\n\n    toNewObject(name, initialize = false) {\n      return this.toNew(c.DATATYPE_OBJECT, name, initialize);\n    }\n\n    /**\n     * a curried way to add a with after construction;\n     * @param data\n     * @returns {ReduceTo}\n     */\n    with(data) {\n      this._addWith(data);\n      return this;\n    }\n\n    get target() {\n      return this._target;\n    }\n\n    /**\n     * target is either\n     * a Data instance (which is replaced on change)\n     * OR a function that the result is passed to.\n     *\n     * @param target\n     */\n    set target(target) {\n      if (target && !((typeof target === 'function') || (target instanceof c.Data))) {\n        throw new Error('target must be instance of Data (or empty)');\n      }\n      this._target = target || null;\n    }\n\n    get from() {\n      return this._from;\n    }\n\n    set from(data) {\n      if (this._from) throw new Error('cannot change from');\n      if (!(data instanceof c.Data)) throw new Error('from must be a Data instance');\n      this._from = data;\n      this._watch(data);\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Modifier.js","import { flattenDeep } from 'lodash';\n\n/**\n * ReduceTo uses the classic Reduce algorithm to produce a result, iterating through the\n * targets values.\n *\n * the end result is applied in one of two ways.\n *\n *  1) if there is a \"target\" and it is a Data, the result of the callback replaces\n *     the entire \"target\"'s contents.\n *\n *  2) if there is a \"target\" and it is a function, that function is called with the result\n *     of the callback  every time one of the watched Data changes. This is a good way to,\n *     for instance, replace a field of a Data collection with the result of an operation.\n *\n * note - the result of reduction is an instance of the same type as the target\n * @param b\n */\nexport default(b) => {\n  b.factory('ReduceTo', c => class ReduceTo extends c.Modifier {\n    get modifierType() { return 'ReduceTo'; }\n\n    constructor(from, callback, target, type, ...withData) {\n      const typeofTarget = c.typeof(target);\n      const typeofType = c.typeof(type);\n\n      if (typeofType !== 'DATATYPE') {\n        if (typeofTarget === 'function') {\n          throw new Error('functional target requires type specification');\n        } else if (typeofTarget === 'Data') {\n          if (typeofType !== 'DATATYPE') {\n            type = target.type;\n          }\n        } else if (typeofTarget === 'DATATYPE') {\n          type = target;\n          target = null;\n        }\n      }\n\n      if (!type && target) {\n        type = target.type;\n      }\n\n      withData = flattenDeep([type, withData]).filter(item => c.typeof(item) === 'Data');\n\n      super(from, callback, target, ...withData);\n      this.targetType = type;\n    }\n\n    onChange(change) {\n      if (!this._inited) return;\n      let memo = c.blankOf(this.targetType);\n      const callback = this.callback;\n\n      Array.from(this.from.entries).forEach(([key, value]) => {\n        memo = callback(memo, value, key, this._withObj, change);\n      });\n\n      if (this.target) {\n        this.target.replace(memo);\n      }\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/ReduceTo.js","import { includes } from 'lodash';\n\nexport default (bottle) => {\n  bottle.constant('DATATYPE_MAP', Symbol('DATATYPE_MAP'));\n  bottle.constant('DATATYPE_OBJECT', Symbol('DATATYPE_OBJECT'));\n  bottle.constant('DATATYPE_ARRAY', Symbol('DATATYPE_ARRAY'));\n  bottle.constant('DATATYPE_VALUE', Symbol('DATATYPE_VALUE'));\n\n  bottle.factory('DATATYPES', c => [c.DATATYPE_MAP, c.DATATYPE_OBJECT,\n    c.DATATYPE_ARRAY, c.DATATYPE_VALUE]);\n\n  bottle.factory('typeof', c => (identifyMe) => {\n    if (!identifyMe) return 'empty';\n\n    if (identifyMe instanceof c.Data) return 'Data';\n\n    if (identifyMe instanceof Map) return 'Map';\n\n    if (Array.isArray(identifyMe)) return 'Array';\n\n    if (includes(c.DATATYPES, identifyMe)) {\n      return 'DATATYPE';\n    }\n\n    return typeof identifyMe;\n  });\n\n  bottle.factory('dataType', c => (item) => {\n    if (item === null) return c.DATATYPE_VALUE;\n    if (Array.isArray(item)) return c.DATATYPE_ARRAY;\n    if (item instanceof Map) return c.DATATYPE_MAP;\n    if (typeof item === 'object') return c.DATATYPE_OBJECT;\n    return c.DATATYPE_VALUE;\n  });\n\n  bottle.factory('blankOf', c => (dataType) => {\n    if (!(c.typeof(dataType) === 'DATATYPE')) {\n      throw new Error(`cannot Blankof ${dataType}`);\n    }\n    let out = {};\n    switch (dataType) {\n      case c.DATATYPE_ARRAY:\n        out = [];\n        break;\n\n      case c.DATATYPE_MAP:\n        out = new Map();\n        break;\n\n      case c.DATATYPE_OBJECT:\n        out = {};\n        break;\n\n      default:\n        console.log('Cthulu lives');\n    }\n    return out;\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/types.js","\n\nexport default(bottle) => {\n  /**\n   * This is a reverse of MapTo = it stores values in the target (unchanged)\n   * by a key determined by the callback. The assumption here is that\n   * (a) the result of key should not change once determined, and\n   * (b) the result of key souuld be unique across the domain.\n   */\n  bottle.factory('Key', c => class KeyTo extends c.Modifier {\n    constructor(data, callback, target) {\n      if (!(target && c.typeof(target) === 'Data')) {\n        throw new Error('must have a data target');\n      }\n      super(data, callback, target);\n    }\n\n    get modifierType() { return 'KeyTo'; }\n\n    onRemove({ change }) {\n      const { index, name } = change;\n      const key = (this.from.type === c.DATATYPE_ARRAY) ? index : name;\n      const value = this.from.get(key);\n      this.target.remove(this.callback(value, key, change, this));\n    }\n\n    onSplice({ change }) {\n      if (!this.target) return;\n      const {\n        added, removed,\n      } = change;\n      if (this.target.type === c.DATATYPE_ARRAY) {\n        // should only get this messages on array to array actions\n        removed.forEach((value, key) => {\n          const targetKey = this.callback(value, key, change, this);\n          this.target.remove(targetKey);\n        });\n        added.forEach((value, key) => {\n          const targetKey = this.callback(value, key, change, this);\n          this.target.set(targetKey, value);\n        });\n      } else {\n        // there is no simple way to reconcile map splices to non-arrays;\n        this.execute();\n      }\n    }\n\n    _emitToData(data) {\n      if (data.name === this.from.name) {\n        data.on('replace', this.onSet, this);\n        data.on('remove', this.onRemove, this);\n        data.on('splice', this.onSplice, this);\n        data.on('add', this.onSet, this);\n        data.on('update', this.onSet, this);\n      } else {\n        super._emitToData(data);\n      }\n    }\n\n    onSet({ change: { index, name, newValue } }) {\n      if (!this.target) return;\n      const key = this.from.type === c.DATATYPE_ARRAY ? index : name;\n      const value = this.callback(newValue, key);\n      this.target.set(key, value);\n    }\n\n    /**\n     * map all thje values\n     */\n    map() {\n      if (!this.target) return;\n      const newTarget = this.getEmptyTo();\n\n      switch (this.target.type) {\n        case c.DATATYPE_ARRAY:\n          this.from.values.map((value, key) => {\n            const newKey = this.callback(value, key, this._withObj);\n            newTarget[newKey] = value;\n            return newKey;\n          });\n          break;\n\n        case c.DATATYPE_OBJECT:\n          this.from.entries.forEach(([key, value]) => {\n            const newKey = this.callback(value, key, this._withObj);\n            newTarget[newKey] = value;\n          });\n          break;\n\n        case c.DATATYPE_MAP:\n          this.from.entries.forEach(([key, value]) => {\n            const newKey = this.callback(value, key, this._withObj);\n            newTarget.set(newKey, value);\n          });\n          break;\n\n        default:\n          throw new Error('unhandled type');\n      }\n\n      this.target.replace(newTarget);\n    }\n\n    getEmptyTo() {\n      let out;\n      switch (this.target.type) {\n        case c.DATATYPE_ARRAY:\n          out = [];\n          break;\n\n        case c.DATATYPE_OBJECT:\n          out = {};\n          break;\n\n        case c.DATATYPE_MAP:\n          out = new Map();\n          break;\n\n        case c.DATATYPE_VALUE:\n          out = null;\n          break;\n\n        default:\n          throw new Error('unhandled type');\n      }\n      return out;\n    }\n\n    init() {\n      this.map();\n    }\n\n    execute() {\n      this.map();\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Key.js","import Bottle from 'bottlejs';\nimport data from './Data';\nimport dataValue from './DataValue';\nimport dataArray from './DataArray';\nimport dataMap from './DataMap';\nimport dataObject from './DataObject';\nimport transaction from './Transaction';\nimport map from './MapTo';\nimport filterTo from './FilterTo';\nimport modifier from './Modifier';\nimport reduceTo from './ReduceTo';\nimport types from './types';\nimport key from './Key';\n\nexport default () => {\n  const b = new Bottle();\n  data(b);\n  dataValue(b);\n  dataArray(b);\n  dataMap(b);\n  dataObject(b);\n  map(b);\n  transaction(b);\n  modifier(b);\n  filterTo(b);\n  reduceTo(b);\n  types(b);\n  key(b);\n  return b;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/bottle.js","import bottle from './bottle';\n\nconst myBottle = bottle();\n\nexport default myBottle.container;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"bottlejs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bottlejs\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"text-table\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"text-table\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"eventemitter3\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"eventemitter3\"\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}